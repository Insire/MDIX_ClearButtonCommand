<Window x:Class="MDIX_ClearButtonCommand.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:MDIX_ClearButtonCommand"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Name="this"
        Title="MainWindow"
        Width="800"
        Height="450"
        d:DataContext="{d:DesignInstance Type=local:MultiSelectionViewModel,
                                         IsDesignTimeCreatable=True}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        TextElement.FontSize="13"
        TextElement.FontWeight="Regular"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        mc:Ignorable="d">

    <Window.Resources>
        <local:MultiSelectionViewModel x:Key="ViewModel" />
    </Window.Resources>

    <Window.DataContext>
        <StaticResource ResourceKey="ViewModel" />
    </Window.DataContext>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <materialDesign:Card Grid.Row="1"
                             Grid.Column="1"
                             Margin="16"
                             Padding="32">

            <local:MultiSelectComboBox Width="200"
                                       materialDesign:HintAssist.Hint="{Binding DisplayString, TargetNullValue='Selection'}"
                                       materialDesign:TextFieldAssist.HasClearButton="False"
                                       IsEditable="False"
                                       IsReadOnly="True"
                                       Style="{StaticResource MaterialDesignComboBox}">
                <local:MultiSelectComboBox.Resources>
                    <DataTemplate DataType="{x:Type local:CommandWrapperViewModel}">
                        <Button Command="{Binding Command}" Content="{Binding DisplayName}" />
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type local:SelectionViewModel}">
                        <CheckBox Content="{Binding DisplayName}" IsChecked="{Binding IsSelected, Mode=TwoWay}" />
                    </DataTemplate>

                    <CompositeCollection x:Key="ItemsSource">
                        <CollectionContainer Collection="{Binding Commands, Source={StaticResource ViewModel}}" />
                        <CollectionContainer Collection="{Binding Items, Source={StaticResource ViewModel}}" />
                    </CompositeCollection>
                </local:MultiSelectComboBox.Resources>

                <local:MultiSelectComboBox.ItemsSource>
                    <StaticResource ResourceKey="ItemsSource" />
                </local:MultiSelectComboBox.ItemsSource>

                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>

                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentControl}">
                        <!--  use setters from MaterialDesignComboBoxItemStyle  -->
                        <!--  see https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/blob/master/MaterialDesignThemes.Wpf/Themes/MaterialDesignTheme.ComboBox.xaml#LL208C17-L208C48  -->
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="Padding" Value="16,8" />
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Template" Value="{StaticResource MaterialDesignComboBoxItemTemplate}" />
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="Template">
                            <!--  use modified template from ComboBoxItem  -->
                            <!--  see https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/blob/master/MaterialDesignThemes.Wpf/Themes/MaterialDesignTheme.ComboBox.xaml#L111  -->
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <Grid x:Name="GridWrapper">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Border x:Name="BackBorder"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="True" />

                                        <Border x:Name="MouseOverBorder"
                                                Background="{TemplateBinding Foreground,
                                                                             Converter={StaticResource BrushRoundConverter}}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Opacity="0"
                                                SnapsToDevicePixels="True" />
                                        <Border x:Name="SelectedBorder"
                                                Background="{TemplateBinding Foreground,
                                                                             Converter={StaticResource BrushRoundConverter}}"
                                                Opacity="0"
                                                RenderTransformOrigin="0.5,0.5" />
                                        <materialDesign:Ripple Padding="{TemplateBinding Padding}"
                                                               HorizontalAlignment="Stretch"
                                                               VerticalAlignment="Stretch"
                                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                               Content="{TemplateBinding Content}"
                                                               ContentTemplate="{TemplateBinding ContentTemplate}"
                                                               ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                               Feedback="{TemplateBinding Foreground,
                                                                                          Converter={StaticResource BrushRoundConverter}}"
                                                               Focusable="False"
                                                               RecognizesAccessKey="False"
                                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                        <VisualTransition.GeneratedEasingFunction>
                                                            <CircleEase EasingMode="EaseOut" />
                                                        </VisualTransition.GeneratedEasingFunction>
                                                    </VisualTransition>
                                                </VisualStateGroup.Transitions>
                                                <VisualState Name="Normal" />
                                                <VisualState Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="0.1"
                                                                         Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup Name="SelectionStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                                </VisualStateGroup.Transitions>
                                                <VisualState Name="Selected">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="0.18"
                                                                         Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState Name="Unselected" />
                                            </VisualStateGroup>
                                            <VisualStateGroup Name="FocusStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Unfocused" />
                                                </VisualStateGroup.Transitions>
                                                <VisualState Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="0.1"
                                                                         Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState Name="Unfocused" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="GridWrapper" Property="Opacity" Value="{x:Static materialDesign:Constants.TextBoxNotEnabledOpacity}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Tag" Value="{StaticResource AllowCollapse}" />
                                                <!--  this is the only thing we actually have to modify on the controltemplate to make it work for multiselection  -->
                                                <!--<Condition Property="IsSelected" Value="True" />-->
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Height" Value="0" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </local:MultiSelectComboBox>
        </materialDesign:Card>
    </Grid>
</Window>
